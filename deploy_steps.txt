Sure, here are the steps to deploy your Flask app using a platform like Heroku:

1. **Install Heroku CLI**:
   Download and install the Heroku CLI from [here](https://devcenter.heroku.com/articles/heroku-cli).

2. **Create a `Procfile`**:
   Create a file named `Procfile` in the root directory of your project. This file tells Heroku how to run your application.
   ```Procfile
   web: python run.py
   ```

3. **Create a `runtime.txt`**:
   Specify the Python version in a file named `runtime.txt`.
   ```runtime.txt
   python-3.9.12
   ```

4. **Create a `requirements.txt`**:
   Ensure your `requirements.txt` file lists all the dependencies. You already have this file.

5. **Initialize a Git Repository**:
   If you haven't already, initialize a Git repository and commit your code.
   ```sh
   git init
   git add .
   git commit -m "Initial commit"
   ```

6. **Login to Heroku**:
   Login to your Heroku account using the CLI.
   ```sh
   heroku login
   ```

7. **Create a Heroku App**:
   Create a new Heroku app.
   ```sh
   heroku create your-app-name
   ```

8. **Deploy to Heroku**:
   Push your code to Heroku.
   ```sh
   git push heroku master
   ```

9. **Scale the App**:
   Ensure at least one instance of the app is running.
   ```sh
   heroku ps:scale web=1
   ```

10. **Open the App**:
    Open your deployed app in the browser.
    ```sh
    heroku open
    ```

This will deploy your Flask app to Heroku. Make sure to replace `your-app-name` with a unique name for your Heroku app.